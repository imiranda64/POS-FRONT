{"version":3,"file":"common.js","mappings":"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","sources":["./src/app/shared/components/reusables/select-autocomplete/select-autocomplete.component.ts","./src/app/shared/components/reusables/select-autocomplete/select-autocomplete.component.html","./src/app/shared/services/document-type.service.ts","./src/app/shared/services/warehouse-select.service.ts","./src/static-data/configs.ts"],"sourcesContent":["import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { scaleInOutAnimation } from \"src/@vex/animations/scale-in-out.animation\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { SelectAutoComplete } from \"@shared/models/select-autocomplete.interface\";\r\nimport { SharedModule } from \"@shared/shared.module\";\r\nimport { IconsService } from \"@shared/services/icons.service\";\r\n\r\n@Component({\r\n  selector: \"app-select-autocomplete\",\r\n  standalone: true,\r\n  imports: [CommonModule, SharedModule],\r\n  templateUrl: \"./select-autocomplete.component.html\",\r\n  styleUrls: [\"./select-autocomplete.component.scss\"],\r\n  animations: [scaleInOutAnimation],\r\n})\r\nexport class SelectAutocompleteComponent implements OnInit, OnChanges {\r\n  @Input() control: FormControl = new FormControl(null);\r\n  @Input() label: string = \"\";\r\n  @Input() placeholder: string = \"\";\r\n  @Input() listOptions: SelectAutoComplete[];\r\n  @Input() required: boolean = false;\r\n  @Input() readonly: boolean = false;\r\n\r\n  @Output() itemSelected = new EventEmitter<string>();\r\n\r\n  optionsFilters: SelectAutoComplete[];\r\n\r\n  icClose = IconsService.prototype.getIcon(\"icClose\");\r\n  icArrowDropDown = IconsService.prototype.getIcon(\"icArrowDropDown\");\r\n\r\n  constructor() {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    for (let property in changes) {\r\n      if (property === \"listOptions\") {\r\n        if (changes.listOptions.previousValue !== undefined) {\r\n          this.optionsFilters = this.filter(\"\", this.listOptions);\r\n        }\r\n\r\n        if (changes.listOptions.currentValue !== undefined) {\r\n          this.optionsFilters = this.filter(\"\", this.listOptions);\r\n\r\n          if (changes.listOptions.currentValue.length === 0) {\r\n            this.control.reset();\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.initMode();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initMode();\r\n  }\r\n\r\n  private filter(value, listOptions: SelectAutoComplete[]) {\r\n    let filterValue = \"\";\r\n    let optionsFiltered = [];\r\n\r\n    if (typeof value === \"string\") {\r\n      filterValue = value.toLowerCase();\r\n    }\r\n\r\n    if (listOptions != undefined && listOptions.length > 0) {\r\n      optionsFiltered = listOptions.filter((option) => {\r\n        return option.description.toLowerCase().includes(filterValue);\r\n      });\r\n      this.placeholder = this.label;\r\n    } else {\r\n      this.placeholder = \"El listado de \" + this.label + \" está vacío\";\r\n    }\r\n\r\n    return optionsFiltered;\r\n  }\r\n\r\n  private initMode() {\r\n    this.optionsFilters = this.listOptions;\r\n    this.control.valueChanges.subscribe((value) => {\r\n      if (value) {\r\n        this.optionsFilters = this.filter(value, this.listOptions);\r\n      } else {\r\n        this.optionsFilters = this.filter(\"\", this.listOptions);\r\n      }\r\n\r\n      this.checkOption(this.control.value, this.listOptions);\r\n    });\r\n\r\n    this.control.enable();\r\n  }\r\n\r\n  private checkOption(value, listOptions: SelectAutoComplete[]) {\r\n    if (listOptions) {\r\n      let ids = listOptions.map((option) => option.id);\r\n      let isValid = ids.includes(value);\r\n      if (isValid) {\r\n        this.control.reset;\r\n      } else {\r\n        if (this.required) this.control.setErrors({ required: true });\r\n      }\r\n    }\r\n  }\r\n\r\n  showDropdown(id: string) {\r\n    let selectValue = null;\r\n    if (this.listOptions && id) {\r\n      let option = this.listOptions.find((option) => option.id === id);\r\n      selectValue = option != undefined ? option.description : null;\r\n    }\r\n    return selectValue;\r\n  }\r\n\r\n  onOptionSelected(event): void {\r\n    if (this.listOptions) {\r\n      const selectedItem = this.listOptions.find((item) => item.id === event);\r\n\r\n      if (selectedItem) {\r\n        this.itemSelected.emit(selectedItem.id)\r\n      }\r\n    }\r\n  }\r\n}\r\n","<mat-form-field appearance=\"outline\" class=\"w-full\">\r\n  <mat-label>{{ label }}</mat-label>\r\n  <div class=\"w-full flex h-5\">\r\n    <input\r\n      [placeholder]=\"placeholder\"\r\n      matInput\r\n      [formControl]=\"control\"\r\n      [matAutocomplete]=\"optionAutocomplete\"\r\n      autocomplete=\"on\"\r\n      [readonly]=\"readonly\"\r\n      (ngModelChange)=\"onOptionSelected($event)\"\r\n    />\r\n    <ng-container>\r\n      <button @scaleInOut (click)=\"control.reset()\" class=\"mr-4\" type=\"button\">\r\n        <ic-icon [icIcon]=\"icClose\" [hidden]=\"readonly\"></ic-icon>\r\n      </button>\r\n\r\n      <ic-icon\r\n        class=\"text-xl text-am-main-blue-light\"\r\n        [icIcon]=\"icArrowDropDown\"\r\n      ></ic-icon>\r\n    </ng-container>\r\n  </div>\r\n  <mat-error *ngIf=\"control.hasError('required')\">\r\n    Este campo es obligatorio.\r\n  </mat-error>\r\n\r\n  <mat-autocomplete\r\n    #optionAutocomplete=\"matAutocomplete\"\r\n    [displayWith]=\"showDropdown.bind(this)\"\r\n    autoActiveFirstOption\r\n  >\r\n    <mat-option *ngFor=\"let option of optionsFilters\" [value]=\"option.id\">{{\r\n      option.description\r\n    }}</mat-option>\r\n  </mat-autocomplete>\r\n</mat-form-field>\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { DocumentType } from \"@shared/models/document-type.interface\";\r\nimport { environment as env } from \"src/environments/environment\";\r\nimport { endpoint } from \"@shared/apis/endpoint\";\r\nimport { BaseResponse } from \"@shared/models/base-api-response.interface\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class DocumentTypeService {\r\n  constructor(private _http: HttpClient) {}\r\n\r\n  listDocumentTypes(): Observable<DocumentType[]> {\r\n    const requestUrl = `${env.api}${endpoint.LIST_DOCUMENT_TYPES}`;\r\n    return this._http.get(requestUrl).pipe(\r\n      map((resp: BaseResponse) => {\r\n        return resp.data;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { endpoint } from \"@shared/apis/endpoint\";\r\nimport { BaseResponse } from \"@shared/models/base-api-response.interface\";\r\nimport { SelectAutoComplete } from \"@shared/models/select-autocomplete.interface\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { environment as env } from \"src/environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class WarehouseSelectService {\r\n  constructor(private _http: HttpClient) {}\r\n\r\n  listSelectWarehouses(): Observable<SelectAutoComplete[]> {\r\n    const requestUrl = `${env.api}${endpoint.LIST_SELECT_WAREHOUSES}`;\r\n    return this._http\r\n      .get(requestUrl)\r\n      .pipe(map((resp: BaseResponse) => resp.data));\r\n  }\r\n}\r\n","export const statesSelect = [\r\n  { value: 1, label: \"Activo\" },\r\n  { value: 0, label: \"Inactivo\" },\r\n];\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}