{"version":3,"file":"src_app_pages_auth_auth_module_ts.js","mappings":";;;;;;;;;;;;;;;;AACuD;AACa;;;AAEpE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6EAAc;KAC1B;CACF,CAAC;AAMK,MAAM,iBAAiB;;kFAAjB,iBAAiB;8GAAjB,iBAAiB;kHAHlB,kEAAqB,CAAC,MAAM,CAAC,EAC7B,yDAAY;mIAEX,iBAAiB,oFAFlB,yDAAY;;;;;;;;;;;;;;;;;;;;;ACZuB;AAEW;AACU;AACf;AACmC;;AAcjF,MAAM,UAAU;;oEAAV,UAAU;uGAAV,UAAU;2GALnB,yDAAY;QACZ,mEAAiB;QACjB,+DAAY;mIAGH,UAAU,mBATnB,6EAAc;QACd,iGAAoB,aAGpB,yDAAY;QACZ,mEAAiB;QACjB,+DAAY;;;;;;;;;;;;;;;;;;;;;ACjB0C;AAIC;;;;AAWpD,MAAM,oBAAoB;IAC/B,YACU,MAAc,EACd,MAAc,EACd,WAAwB;QAFxB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QAG1B,aAAQ,GAAG,8EAAoB,CAAC;IAFrC,CAAC;IAIJ,QAAQ;QACN,MAAM,CAAC,mBAAmB,GAAG,GAAG,EAAE;YAChC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,UAAU,CAAC;gBAC5B,SAAS,EAAE,IAAI,CAAC,QAAQ;gBACxB,QAAQ,EAAE,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC;gBAClD,WAAW,EAAE,KAAK;gBAClB,qBAAqB,EAAE,KAAK;aAC7B,CAAC,CAAC;YACH,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,EAAE;gBACvE,KAAK,EAAE,aAAa;gBACpB,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,OAAO;gBACb,IAAI,EAAE,eAAe;gBACrB,KAAK,EAAE,QAAQ;gBACf,WAAW,EAAE,MAAM;gBACnB,KAAK,EAAE,GAAG;aACX,CAAC,CAAC;YACH,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,YAAsC,EAAE,EAAE,GAAE,CAAC,CAAC,CAAC;QAC5E,CAAC,CAAC;IACJ,CAAC;IAEK,wBAAwB,CAAC,QAA4B;;YACzD,MAAM,IAAI,CAAC,WAAW;iBACnB,eAAe,CAAC,QAAQ,CAAC,UAAU,EAAE,SAAS,CAAC;iBAC/C,SAAS,CACR,CAAC,IAAkB,EAAE,EAAE;gBACrB,IAAI,IAAI,CAAC,SAAS,EAAE;oBAClB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE;wBACnB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBAC9B,CAAC,CAAC,CAAC;iBACJ;YACH,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;gBACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACrB,CAAC,CACF,CAAC;QACN,CAAC;KAAA;;wFA7CU,oBAAoB;kHAApB,oBAAoB;QCfjC,yEAAqD;QACjD,oEAA6B;QACjC,4DAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACD+D;AACD;AACN;;;;;;;;;;;;;;ICUtD,4EAA0D;IACxD,sFACF;IAAA,4DAAY;;;IAKZ,4EAA6D;IAC3D,gGACF;IAAA,4DAAY;;;IAQV,0EAA6D;;;IAAnC,uFAAuB;;;IACjD,0EAAiE;;;IAAtC,0FAA0B;;ADlBxD,MAAM,cAAc;IAezB,YACU,EAAe,EACf,WAAwB,EACxB,MAAc,EACd,EAAqB;QAHrB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,OAAE,GAAF,EAAE,CAAmB;QAjB/B,cAAS,GAAG,UAAU,CAAC;QACvB,YAAO,GAAG,KAAK,CAAC;QAEhB,iBAAY,GAAG,0FAA8B,CAAC,cAAc,CAAC,CAAC;QAC9D,oBAAe,GAAG,0FAA8B,CAAC,iBAAiB,CAAC,CAAC;IAcjE,CAAC;IAZJ,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,KAAK,EAAE,CAAC,kBAAkB,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAClD,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,+DAAmB,CAAC,CAAC;SAC/C,CAAC,CAAC;IACL,CAAC;IASD,QAAQ;QACN,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,KAAK;QACH,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE;gBAC5D,QAAQ,CAAC,gBAAgB,EAAE,CAAC;YAC9B,CAAC,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACpE,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;aAC7B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB;QACd,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;YAC5B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;SACxB;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;YACxB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;SACxB;IACH,CAAC;;4EAlDU,cAAc;4GAAd,cAAc;QCb3B,yEAAuC;QAGjC,oEAA2C;QAC7C,4DAAM;QACN,qEAAI;QAAA,8EAAc;QAAA,4DAAK;QACvB,qEAAI;QAAA,4FAAiC;QAAA,4DAAK;QAC1C,8EAAqC;QAErC,2EAAiE;QAArB,2IAAY,WAAO,IAAC;QAC9D,qFAAqD;QACxC,mEAAO;QAAA,4DAAY;QAC9B,uEAA0C;QAC1C,wHAEY;QACd,4DAAiB;QACjB,qFAAqD;QACxC,2EAAU;QAAA,4DAAY;QACjC,uEAAgE;QAChE,wHAEY;QACZ,6EAMC;QALC,uIAAS,sBAAkB,IAAC;QAM5B,uHAA6D;QAC7D,uHAAiE;QACnE,4DAAS;QAEX,8EAAwD;QACtD,iFACF;QAAA,4DAAS;;QA3BL,2DAAkB;QAAlB,+EAAkB;QAIR,0DAA4C;QAA5C,4GAA4C;QAMjD,0DAAkB;QAAlB,+EAAkB;QACb,0DAA+C;QAA/C,+GAA+C;QAOzD,0DAAqE;QAArE,mJAAqE;QAG1D,0DAAa;QAAb,6EAAa;QACb,0DAAc;QAAd,8EAAc","sources":["./src/app/pages/auth/auth-routing.module.ts","./src/app/pages/auth/auth.module.ts","./src/app/pages/auth/components/login-google/login-google.component.ts","./src/app/pages/auth/components/login-google/login-google.component.html","./src/app/pages/auth/components/login/login.component.ts","./src/app/pages/auth/components/login/login.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './components/login/login.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { LoginGoogleComponent } from './components/login-google/login-google.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    LoginGoogleComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AuthRoutingModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class AuthModule { }\r\n","import { Component, NgZone, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { CredentialResponse, PromptMomentNotification } from \"google-one-tap\";\r\nimport { AuthService } from \"../../services/auth.service\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { BaseResponse } from \"@shared/models/base-api-response.interface\";\r\n\r\ndeclare var window: any;\r\ndeclare var google: any;\r\n\r\n@Component({\r\n  selector: \"app-login-google\",\r\n  templateUrl: \"./login-google.component.html\",\r\n  styleUrls: [\"./login-google.component.scss\"],\r\n})\r\nexport class LoginGoogleComponent implements OnInit {\r\n  constructor(\r\n    private router: Router,\r\n    private ngZone: NgZone,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  private clientId = environment.clientId;\r\n\r\n  ngOnInit(): void {\r\n    window.onGoogleLibraryLoad = () => {\r\n      google.accounts.id.initialize({\r\n        client_id: this.clientId,\r\n        callback: this.handleCredentialResponse.bind(this),\r\n        auto_select: false,\r\n        cancel_on_tap_outside: false,\r\n      });\r\n      google.accounts.id.renderButton(document.getElementById(\"buttonGoogle\"), {\r\n        theme: \"filled_blue\",\r\n        type: \"standard\",\r\n        size: \"large\",\r\n        text: \"continue_with\",\r\n        shape: \"square\",\r\n        auto_select: \"true\",\r\n        width: 300,\r\n      });\r\n      google.accounts.id.prompt((notification: PromptMomentNotification) => {});\r\n    };\r\n  }\r\n\r\n  async handleCredentialResponse(response: CredentialResponse) {\r\n    await this.authService\r\n      .loginWithGoogle(response.credential, \"Externo\")\r\n      .subscribe(\r\n        (resp: BaseResponse) => {\r\n          if (resp.isSuccess) {\r\n            this.ngZone.run(() => {\r\n              this.router.navigate([\"/\"]);\r\n            });\r\n          }\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  }\r\n}\r\n","<div class=\"flex justify-center items-center w-full\">\r\n    <div id=\"buttonGoogle\"></div>\r\n</div>","import { group } from \"@angular/animations\";\r\nimport { ChangeDetectorRef, Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { IconsService } from \"@shared/services/icons.service\";\r\nimport { IconService } from \"@visurel/iconify-angular\";\r\nimport { AuthService } from \"../../services/auth.service\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"vex-login\",\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.scss\"],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  form: FormGroup;\r\n  inputType = \"password\";\r\n  visible = false;\r\n\r\n  icVisibility = IconsService.prototype.getIcon(\"icVisibility\");\r\n  icVisibilityOff = IconsService.prototype.getIcon(\"icVisibilityOff\");\r\n\r\n  initForm(): void {\r\n    this.form = this.fb.group({\r\n      email: [\"cajero@gmail.com\", [Validators.required]],\r\n      password: [\"cajero123\", [Validators.required]],\r\n    });\r\n  }\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private cd: ChangeDetectorRef\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n  }\r\n\r\n  login(): void {\r\n    if (this.form.invalid) {\r\n      return Object.values(this.form.controls).forEach((controls) => {\r\n        controls.markAllAsTouched();\r\n      });\r\n    }\r\n\r\n    this.authService.login(this.form.value, \"Interno\").subscribe((resp) => {\r\n      if (resp.isSuccess) {\r\n        this.router.navigate([\"/\"]);\r\n      }\r\n    });\r\n  }\r\n\r\n  toggleVisibility() {\r\n    if (this.visible) {\r\n      this.inputType = \"password\";\r\n      this.visible = false;\r\n      this.cd.markForCheck();\r\n    } else {\r\n      this.inputType = \"text\";\r\n      this.visible = true;\r\n      this.cd.markForCheck();\r\n    }\r\n  }\r\n}\r\n","<div class=\"w-full h-full login-fondo\">\r\n  <div class=\"login\">\r\n    <div class=\"avatar\">\r\n      <img src=\"assets/img/demo/landscape.jpg\" />\r\n    </div>\r\n    <h2>Iniciar Sesi√≥n</h2>\r\n    <h3>Bienvenid@ a tu sistema de ventas</h3>\r\n    <app-login-google></app-login-google>\r\n    <br />\r\n    <form [formGroup]=\"form\" class=\"login-form\" (ngSubmit)=\"login()\">\r\n      <mat-form-field appearance=\"outline\" class=\"textbox\">\r\n        <mat-label>Usuario</mat-label>\r\n        <input matInput formControlName=\"email\" />\r\n        <mat-error *ngIf=\"form.get('email').hasError('required')\">\r\n          Campo email es requerido.\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" class=\"textbox\">\r\n        <mat-label>Contrase√±a</mat-label>\r\n        <input [type]=\"inputType\" matInput formControlName=\"password\" />\r\n        <mat-error *ngIf=\"form.get('password').hasError('required')\">\r\n          Campo contrase√±a es requerido.\r\n        </mat-error>\r\n        <button\r\n          (click)=\"toggleVisibility()\"\r\n          mat-icon-button\r\n          matSuffix\r\n          matTooltip=\"{{ !visible ? 'Ver contrase√±a' : 'Ocultar contrase√±a' }}\"\r\n          type=\"button\"\r\n        >\r\n          <mat-icon *ngIf=\"visible\" [icIcon]=\"icVisibility\"></mat-icon>\r\n          <mat-icon *ngIf=\"!visible\" [icIcon]=\"icVisibilityOff\"></mat-icon>\r\n        </button>\r\n      </mat-form-field>\r\n      <button type=\"submit\" color=\"primary\" mat-raised-button>\r\n        Iniciar Sesi√≥n\r\n      </button>\r\n    </form>\r\n  </div>\r\n</div>\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}